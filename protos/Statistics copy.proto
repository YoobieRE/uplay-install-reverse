syntax = "proto2";

package mg.protocol.statistics;

message GameStartTypeData {
    optional string machineId = 1;
    optional string buildVersion = 2;
    optional string gameVersion = 3;
}

message GameLocalizationTypeData {
    optional bool areSubtitlesEnabled = 1;
    optional string gameLanguage = 2;
    optional string platformLocale = 3;
    optional string subtitlesLanguage = 4;
}

message ContextStartTypeData {
    optional string contextType = 1;
    optional string contextName = 2;
    optional uint32 contextId = 3;
}

message ContextStopTypeData {
    optional string contextType = 1;
    optional string contextName = 2;
    optional uint32 contextDuration = 3;
    optional uint32 contextId = 4;
}

message GameEndObjectData {
    optional uint32 gameLength = 1;
    optional uint32 nbScreenshots = 2;
    optional uint32 nbUnitsWon = 3;
    optional uint32 nbAchievmentsUnlocked = 4;
    optional uint32 productId = 5;
    optional string activationIds = 6;
    optional uint32 nbParties = 7;
    optional uint32 brand = 8;
    optional uint32 openOverlayCount = 10;
    optional bool generatedFromCache = 12 [default = false];
    optional bool shopVisible = 13 [default = false];
}

message DLErrorObjectData {
    optional string dlSessionId = 1;
    optional uint32 productId = 2;
    optional string errorSource = 3;
    optional string context = 4;
    optional string errorCode = 5;
    optional uint32 nbOccurences = 6;
    optional uint32 brand = 7;
    optional string category = 8;
}

message DecompressSliceErrorObjectData {
    optional uint32 productId = 1;
    optional string manifestSHA1 = 2;
    optional string filePath = 3;
    optional uint32 sliceOffsetInFile = 4;
    optional uint32 sliceSize = 5;
    
    optional CompressionMethod compressionMethod = 6;
    enum CompressionMethod {
        NONE = 1;
        ZIP = 2;
        LZHAM = 3;
        ZSTD = 4;
    }
    
    optional int32 errorCode = 7;
    
    optional Source source = 8;
    enum Source {
        RETAIL = 1;
        DOWNLOAD = 2;
    }
    
    optional string sliceFilename = 9;
}

message FollowLinkObjectData {
    optional string sender = 1;
    optional string linkUrl = 2;
    optional string target = 3;
    optional string metaTag = 4;
    optional string visualAsset = 5;
    optional string linkResult = 6;
}

message GameLaunchObjectData {
    optional uint32 productId = 1;
    optional string launchMethod = 2;
    optional uint32 gameStarterTime = 3;
    optional string inputSource = 4;
    optional string steamAccount = 5;
    optional uint32 brand = 7;
    optional string activationIds = 8;
    optional bool shopVisible = 9;
    optional bool productActivated = 10;
    optional string machineGuid = 11;
    optional string launchPartner = 12;
}

message AppQuitObjectData {
    optional QuitReason quitReason = 1;
    enum QuitReason {
        USER = 1;
        LOGOUT = 2;
        FAILEDRELOGIN = 3;
        LOGOUTPUSH = 4;
        PATCH = 5;
        GOOFFLINE = 6;
        GOONLINE = 7;
        USERBANNED = 8;
        RESTART = 9;
        CLIENTOUTDATED = 10;
        UNKNOWN = 11;
    }
    
    optional uint32 secondsSinceStart = 2;
    optional uint32 demuxConnectionFailureCount = 3;
    optional uint32 discardedEventsCount = 5;
    optional bool generatedFromCache = 6 [default = false];
    optional bool shopVisible = 7 [default = false];
}

message GameCloudSaveSyncObjectData {
    optional uint32 productId = 1;
    optional string machineId = 2;
    
    optional When when = 3;
    enum When {
        START = 1;
        END = 2;
    }
    
    optional Direction direction = 4;
    enum Direction {
        UPLOAD = 1;
        DOWNLOAD = 2;
    }
    
    optional Conflict conflict = 5;
    enum Conflict {
        MISMATCH = 1;
        MIGRATIONCONFLICT = 2;
        CLOUDSTORAGECONFLICT = 3;
    }
    
    optional Error error = 6;
    enum Error {
        GETCONSISTENTSERVERFAILED = 1;
        SETCONSISTENTSERVERFAILED = 2;
        PACKFILESFAILED = 3;
        GETUPLOADURLFAILED = 4;
        UPLOADFAILED = 5;
        MIGRATIONFAILED = 6;
        DOWNLOADFAILED = 7;
    }
    
    optional Resolution resolution = 7;
    enum Resolution {
        CLOUD = 1;
        LOCAL = 2;
    }
    
    optional uint32 bytesSent = 8;
    optional uint32 brand = 9;
}

message SettingChangedObjectData {
    optional string settingName = 1;
    optional string oldValue = 2;
    optional string newValue = 3;
    optional string sender = 4;
}

message ShopAddToCartObjectData {
    optional uint32 productId = 1;
    optional uint32 gameId = 2;
    optional uint32 titleId = 3;
    optional string action = 4;
}

message UINavObjectData {
    required string id = 1;
    required string index = 2;
    optional uint32 timeOnFocus = 3;
    optional uint32 timeOnBlur = 4;
    optional bool generatedFromCache = 6 [default = false];
    optional bool shopVisible = 7 [default = false];
}

message BattlePassActionObjectData {
    required string action = 1;
    required string details = 2;
    optional string endstatus = 3;
    required uint32 gameId = 4;
    required uint32 brandId = 5;
    required string viewSource = 6;
}

message AppStartObjectData {
    optional string launchMethod = 1;
    optional string machineId = 2;
    optional string fileVersion = 3;
    optional uint32 patchTime = 4;
    optional uint32 loginTime = 5;
    optional uint32 configTime = 6;
    optional string optInPatch = 7;
    optional bool offlineStart = 8;
    optional uint32 authType = 9;
    optional bool shopVisible = 10;
    optional bool verifiedEmail = 12;
    optional string twoFAtype = 13;
    optional bool trustedDevice = 14;
    optional bool verifiedPhone = 15;
    optional string clientLanguage = 16;
    
    enum AuthType {
        NORMAL = 0;
        STEAM = 1;
        GOOGLE_AUTHENTICATOR = 2;
        OCULUS = 3;
        NVIDIA = 4;
        UBITUS = 5;
        UBISOFT_AUTHENTICATOR = 6;
    }
}

message DownloadObjectData {
    optional string dlSessionId = 1;
    optional string contract = 2;
    optional string contentType = 3;
    optional bool isResuming = 4;
    optional uint32 productId = 5;
    optional uint32 patchDL = 6;
    optional uint64 dlSize = 7;
    optional uint64 overheadWaste = 8;
    optional uint64 overheadMetadata = 9;
    optional uint64 overheadTotal = 10;
    optional uint64 totalExpectedSize = 11;
    optional uint64 totalDLSize = 12;
    optional uint32 milestoneDLTime = 13;
    optional uint32 totalDLTime = 14;
    optional uint64 avgDLSpeed = 15;
    optional uint64 maxDLSpeed = 16;
    optional uint32 nbTimesPaused = 17;
    optional string endStatus = 18;
    optional string failReason = 19;
    optional uint32 userSpeedLimit = 20;
    optional string activationIds = 21;
    optional uint32 brand = 22;
    optional string initiatedFrom = 24;
    optional string installerId = 25;
}

message HardwareScoreData {
    optional uint32 cpuScore = 1;
    optional uint32 gpuScore = 2;
    optional string cpuName = 3;
    optional string gpuName = 4;
    optional uint32 ramSize = 5;
    optional float gpuScoreConfidenceLevel = 6;
}

message GPUInfo {
    optional string name = 1;
    optional uint32 vendorId = 2;
    optional uint32 deviceId = 3;
    optional uint32 vram = 4;
    optional string dxVersion = 5;
    optional string driverVersion = 6;
}

message SoundDeviceInfo {
    optional string name = 1;
    optional uint32 vendorId = 2;
    optional uint32 deviceId = 3;
    optional string driverVersion = 4;
}

message PhysicalDrive {
    optional string model = 1;
    optional string deviceId = 2;
    optional uint32 size = 3;
    optional string name = 4;
}

message USBDevice {
    optional string name = 1;
    optional uint32 vendorId = 2;
    optional uint32 deviceId = 3;
}

message MachineConfObjectData {
    optional string machineGuid = 1;
    optional uint32 ramSize = 2;
    optional string ramType = 3;
    optional uint32 cpuCount = 4;
    optional uint32 cpuCores = 5;
    optional uint32 cpuThreads = 6;
    optional string cpuName = 7;
    optional string cpuHSI = 8;
    optional uint32 cpuDetectedSpeed = 9;
    optional uint32 gpuCount = 10;
    optional string gpuName = 11;
    optional string gpuVendor = 12;
    optional string gpuDXVersion = 13;
    optional uint32 gpuVram = 14;
    optional string monitor1 = 15;
    optional string monitor2 = 16;
    optional uint32 hddCount = 17;
    optional uint32 hddTotSpace = 18;
    optional uint32 hddFreeSpace = 19;
    optional string osName = 20;
    optional uint32 osBits = 21;
    optional string osRegion = 22;
    optional string soundCard = 23;
    optional uint32 netBandwidth = 24;
    optional uint32 cpuScore = 25;
    optional uint32 gpuScore = 26;
    optional string microphone = 27;
    optional string gamepad = 28;
    optional uint32 detectionTime = 29;
    optional string osVersion = 30;
    optional string uuid = 31;
    optional string countryCode = 32;
    optional uint32 cpuCacheL1 = 33;
    optional uint32 cpuCacheL2 = 34;
    optional uint32 cpuCacheL3 = 35;
    optional string cpuDescription = 36;
    optional string netAdapterType = 37;
    optional uint32 netVendorId = 38;
    optional uint32 netDeviceId = 39;
    optional string motherboardChipset = 41;
    optional string firewall = 42;
    repeated GPUInfo gpu = 43;
    repeated SoundDeviceInfo soundDevice = 44;
    repeated PhysicalDrive physicalDrive = 45;
    repeated USBDevice usbDevice = 46;
}

message HttpServiceRequestObjectData {
    optional string url = 1;
    optional string name = 2;
    optional uint32 responseCode = 3;
    optional uint32 connectTime = 4;
    optional uint32 requestTime = 5;
    optional uint32 totTime = 6;
}

message ImportSteamFriendsObjectData {
    optional uint32 totSteamFriends = 1;
    optional uint32 friendsImported = 2;
    optional string steamId = 3;
}

message ActivateProductObjectData {
    optional uint32 packageId = 1;
    optional uint32 gameId = 2;
    optional uint32 brandId = 3;
    optional string failReason = 4;
    optional uint32 nbKeyAttempts = 5;
    optional bool banned = 6;
    optional uint64 activationTime = 7;
    optional string initiatedFrom = 8;
    optional string currentGroup = 9;
    optional string previousGroup = 10;
    optional uint32 nbNormalGames = 11;
    optional uint32 nbSteamGames = 12;
    optional string productType = 13;
}

message PartyObjectData {
    optional int64 partyId = 1;
    optional int32 joinedParty = 2;
    optional int32 leftParty = 3;
    optional bool isInitiator = 4;
    optional bool declinedParty = 5;
    optional int32 productId = 6;
    optional string activationIds = 7;
    optional int32 brandId = 8;
    optional int32 maxPartyMembers = 9;
}

message AccountCreationObjectData {
    optional EndStatus endStatus = 5;
    enum EndStatus {
        SUCCESS = 1;
        FAIL = 2;
        CANCEL = 3;
    }
    
    optional FailReason failReason = 6;
    enum FailReason {
        GETPOLICIESFAIL = 1;
        VALIDATINGFAIL = 2;
        CREATEACCOUNTFAIL = 3;
    }
    
    optional string errorCodes = 7;
    optional string initiatedFrom = 8;
    optional string installerId = 9;
}

message FriendActionObjectData {
    optional string action = 1;
    optional string friendId = 2;
    optional uint32 productId = 3;
    optional uint32 brandId = 4;
    optional string inputSource = 5;
}

message FriendSuggestionActionObjectData {
    optional string action = 1;
    optional string friendId = 2;
    optional string suggestionType = 3;
    optional string inputSource = 4;
    optional uint32 brandId = 5;
}

message FriendSuggestionImpressionObjectData {
    optional string friendId = 1;
    optional string suggestionType = 2;
    optional string inputSource = 3;
    optional uint32 brandId = 4;
    optional uint32 sugRank = 5;
}

message RedeemRewardObjectData {
    optional uint32 unitCost = 1;
    optional string rewardId = 2;
    optional string sourcePage = 3;
    optional uint32 productId = 4;
    optional string activationIds = 5;
    optional uint32 brandId = 6;
}

message StreamingSessionObjectData {
    optional int32 gameVolume = 1;
    optional int32 micVolume = 2;
    optional int32 paused = 3;
    optional int32 startTime = 4;
    optional int32 endTime = 5;
    optional int32 copyUrl = 6;
    optional string startMethod = 7;
    optional int32 maxNbViewers = 8;
    optional int32 gameId = 9;
    optional int32 brandId = 10;
    optional int32 streamingTime = 11;
    optional string serviceName = 13;
}

message AccountLinkingObjectData {
    optional string thirdPartyName = 1;
    optional int32 success = 2;
    optional string thirdPartyId = 3;
}

message ChatSessionObjectData {
    optional string conversationId = 1;
    optional int32 msgSent = 2;
    optional int32 msgReceived = 3;
    optional int32 type = 4;
}

message ChallengeActionObjectData {
    optional uint32 productId = 1;
    optional string activationIds = 2;
    optional uint32 brandId = 3;
    optional string action = 4;
    optional string poolId = 5;
    optional string challengeId = 6;
    optional bool expired = 7;
}

message NewsClickObjectData {
    optional string ignId = 1;
    optional string viewName = 2;
    optional string displayType = 3;
    optional uint32 brandId = 4;
    optional uint32 productId = 5;
    optional string layout = 7;
}

message NewsOpenObjectData {
    optional string ignId = 1;
    optional string sender = 2;
    optional string senderId = 3;
}

message NewsImpressionObjectData {
    optional string ignId = 1;
    optional string viewName = 2;
    optional string displayType = 3;
    optional uint32 brandId = 4;
    optional uint32 productId = 5;
}

message AdImpressionObjectData {
    optional string linkUrl = 1;
    optional string metaTag = 2;
}

message PromoTabInteractionObjectData {
    optional string tabName = 1;
    optional string interactionType = 2;
    optional string target = 3;
    optional string sectionName = 4;
    optional uint32 brandId = 5;
    optional string url = 6;
    optional string clientLanguage = 7;
}

message NewsInteractionObjectData {
    optional string ignId = 1;
    optional string interactionType = 2;
    optional string target = 3;
    optional string viewName = 4;
    optional uint32 brandId = 5;
    optional uint32 productId = 6;
    optional string url = 8;
    optional string layout = 9;
    optional string betaCode = 10;
    optional uint32 betaPhaseId = 11;
}

message TicketRenewalFailureObjectData {
    optional uint32 failRenewalCount = 1;
    optional uint32 resultHttpCode = 2;
    optional bool isRememberMeTicket = 3;
}

message GroupActionObjectData {
    optional string action = 1;
    optional string groupId = 2;
    optional string inviteeId = 3;
    optional string groupName = 4;
    optional string groupPreviousName = 5;
    optional uint32 productId = 6;
    optional uint32 brandId = 7;
    optional string inputSource = 8;
}

message IngameShopImpressionObjectData {
    optional string assetUrl = 1;
    optional string viewName = 2;
    optional uint32 gameId = 3;
    optional uint32 brandId = 4;
    optional string shopId = 5;
    optional string marketId = 6;
    optional string countryId = 7;
    optional uint32 productId = 8;
    optional string shopProductId = 9;
}

message IngameShopActionObjectData {
    optional uint32 gameId = 1;
    optional uint32 brandId = 2;
    optional string shopId = 3;
    optional string marketId = 4;
    optional string countryId = 5;
    optional uint32 productId = 6;
    optional string shopProductId = 7;
    optional string pspId = 8;
    optional string promoId = 9;
    optional uint32 filterId = 10;
    optional string itemCategory = 11;
    optional bool result = 12;
    optional string action = 13;
    optional string source = 14;
}

message DiagnosticObjectData {
    optional string customData = 2;
}

message EmailVerificationObjectData {
    optional string action = 1;
    optional string inputSource = 2;
}

message TwoFAActivationObjectData {
    optional string action = 1;
    optional string inputSource = 2;
}

message PhoneSecurityObjectData {
    optional string action = 1;
    optional string inputSource = 2;
}

message SendSmsTrackEventActionObjectData {
    optional string action = 1;
    optional string inputSource = 2;
}

message PopUpDisplayEventObjectData {
    optional string popUpName = 1;
    optional string viewName = 2;
    optional string finalState = 3;
    optional string contentId = 4;
}

message TrustedDeviceActionData {
    optional string action = 1;
    optional string machineId = 2;
    optional bool defaultFriendlyName = 3;
}

message EventTypeData {
    optional GameStartTypeData gameStart = 1;
    optional GameLocalizationTypeData gameLocalization = 2;
    optional ContextStartTypeData contextStart = 3;
    optional ContextStopTypeData contextStop = 4;
}

message EventObjectData {
    optional GameLaunchObjectData gameLaunch = 1;
    optional UINavObjectData uiNav = 2;
    optional AppStartObjectData appStart = 3;
    optional DownloadObjectData download = 4;
    optional FollowLinkObjectData followLink = 5;
    optional GameCloudSaveSyncObjectData gameCloudSaveSync = 6;
    optional SettingChangedObjectData settingChanged = 7;
    optional MachineConfObjectData machineConf = 8;
    optional DLErrorObjectData dlError = 9;
    optional AppQuitObjectData appQuit = 10;
    optional DecompressSliceErrorObjectData decompressSliceError = 11;
    optional GameEndObjectData gameEnd = 12;
    optional HttpServiceRequestObjectData httpServiceRequest = 13;
    optional ImportSteamFriendsObjectData importSteamFriends = 14;
    optional ActivateProductObjectData activateProduct = 15;
    optional FriendActionObjectData friendAction = 16;
    optional RedeemRewardObjectData redeemReward = 17;
    optional AccountCreationObjectData accountCreation = 18;
    optional StreamingSessionObjectData streamingSession = 19;
    optional AccountLinkingObjectData accountLinking = 20;
    optional ChatSessionObjectData chatSession = 21;
    optional PartyObjectData party = 22;
    optional ChallengeActionObjectData challengeAction = 23;
    optional NewsClickObjectData newsClick = 24;
    optional NewsImpressionObjectData newsImpression = 25;
    optional NewsInteractionObjectData newsInteraction = 26;
    optional ShopAddToCartObjectData shopAddToCart = 27;
    optional TicketRenewalFailureObjectData ticketRenewalFailure = 28;
    optional GroupActionObjectData groupAction = 29;
    optional DiagnosticObjectData diagnostic = 30;
    optional IngameShopActionObjectData ingameShopAction = 31;
    optional IngameShopImpressionObjectData IngameShopImpression = 32;
    optional PromoTabInteractionObjectData promoTabInteraction = 33;
    optional EmailVerificationObjectData emailVerification = 34;
    optional TwoFAActivationObjectData twoFAActivation = 35;
    optional AdImpressionObjectData adImpression = 36;
    optional PopUpDisplayEventObjectData popUpDisplayEvent = 37;
    optional NewsOpenObjectData newsOpen = 38;
    optional BattlePassActionObjectData battlePassAction = 39;
    optional TrustedDeviceActionData trustedDeviceAction = 40;
    optional FriendSuggestionActionObjectData friendSuggestionAction = 41;
    optional FriendSuggestionImpressionObjectData friendSuggestionImpression = 42;
    optional PhoneSecurityObjectData phoneSecurity = 43;
    optional SendSmsTrackEventActionObjectData SendSmsAction = 44;
}

message Event {
    required string type = 1;
    optional uint32 seqId = 2;
    optional string createdDate = 3;
    repeated uint32 contexts = 4;
    optional EventObjectData obj = 5;
    optional EventTypeData typeData = 6;
    optional uint32 buildNumber = 7;
    optional string clientVersion = 8;
    optional uint32 ownedGames = 12;
    optional string userType = 13;
    optional bool mAccount = 14;
}

message TrackingSession {
    optional Event endEvent = 1;
    optional uint64 runtimeSeconds = 2;
    optional uint32 secondsSinceStart = 3;
}

message StatisticsSession {
    repeated Event events = 1;
    optional uint32 buildNumber = 2;
    optional string accountId = 3;
    optional string sessionId = 4;
    optional uint32 nextSequenceId = 5;
    repeated TrackingSession trackingSessions = 6;
    optional uint32 secondsSinceStart = 7;
}

message StatisticsCache {
    required uint32 version = 1;
    repeated StatisticsSession sessions = 2;
    optional string date = 3;
}
